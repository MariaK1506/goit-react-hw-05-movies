{"version":3,"file":"static/js/418.720e02c5.chunk.js","mappings":"sLAEaA,E,QAAUC,GAAAA,GAAH,wF,SCCL,SAASC,EAAT,GAA6B,IAAZC,EAAW,EAAXA,QAC9B,OAAO,SAACH,EAAD,UAAUG,M,2FCDNC,EAAOH,EAAAA,GAAAA,GAAH,yCAIJI,GAASJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,iQ,SCJJ,SAASM,EAAT,GAAoC,IAAdC,EAAa,EAAbA,GAAIC,EAAS,EAATA,MACvC,OACE,SAACL,EAAD,WACE,SAACC,EAAD,CAAQK,GAAE,kBAAaF,GAAvB,SAA8BC,KADrBD,GCHR,IAAMG,EAAOV,EAAAA,GAAAA,GAAH,0CCajB,EAXmB,SAAC,GAAgB,IAAdW,EAAa,EAAbA,OAEpB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,gBAAGL,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOK,EAAd,EAAcA,YAAd,OACV,SAACP,EAAD,CAAqBC,GAAIA,EAAIC,MAAOA,EAAOM,OAAQD,GAAlCN,U,6ICJV,SAASQ,IACtB,MCHa,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACRH,EAAU,WAIRI,EAAAA,sBACGC,MAAK,SAAAC,GACJR,EAAUQ,EAAKC,SACfP,EAAU,YAEkB,IAAxBM,EAAKC,QAAQC,SACfN,EACE,4EAEFF,EAAU,gBAGbS,OAAM,SAAAR,GACLC,EAASD,GACTD,EAAU,iBAGf,IAEI,CAAER,OAAAA,EAAQS,MAAAA,EAAOF,OAAAA,GD1BUW,GAA1BlB,EAAR,EAAQA,OAAQS,EAAhB,EAAgBA,MAAOF,EAAvB,EAAuBA,OAEvB,OACE,gCACE,2CACY,YAAXA,IAAwB,SAACY,EAAA,EAAD,IACb,aAAXZ,IAAyB,SAACjB,EAAA,EAAD,CAAOC,QAASkB,IAC9B,aAAXF,IAAyB,SAACa,EAAA,EAAD,CAAYpB,OAAQA","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","hooks/useFetchTrandingMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Message = styled.h2`\n  text-align: center;\n  color: orangered;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Error.styled';\n\nexport default function Error({ message }) {\n  return <Message>{message}</Message>;\n}\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  padding: 5px;\n`;\n\nexport const LinkTo = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 16px;\n  color: black;\n\n  &.active {\n    color: orangered;\n  }\n\n  :hover:not(.active),\n  :focus:not(.active) {\n    color: orangered;\n  }\n`;\n","import { Item, LinkTo } from './MoviesItem.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesItem({ id, title }) {\n  return (\n    <Item key={id}>\n      <LinkTo to={`/movies/${id}`}>{title}</LinkTo>\n    </Item>\n  );\n}\n\nMoviesItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  tittle: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport MoviesItem from '../MoviesItem/MoviesItem';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  // console.log(movies);\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <MoviesItem key={id} id={id} title={title} poster={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import useFetchTrandingMovies from 'hooks/useFetchTrandingMovies';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\n\nexport default function HomePage() {\n  const { movies, error, status } = useFetchTrandingMovies();\n\n  return (\n    <section>\n      <h2>Trending today</h2>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <Error message={error} />}\n      {status === 'resolved' && <MoviesList movies={movies} />}\n    </section>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport * as Api from 'services/movies-api';\n\nexport default function useFetchTrandingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus('pending');\n    renderTrandingMovies();\n\n    function renderTrandingMovies() {\n      Api.fetchTrendingMovies()\n        .then(data => {\n          setMovies(data.results);\n          setStatus('resolved');\n\n          if (data.results.lenght === 0) {\n            setError(\n              'Sorry, there are no movies matching your search query. Please try again.'\n            );\n            setStatus('rejected');\n          }\n        })\n        .catch(error => {\n          setError(error);\n          setStatus('rejected');\n        });\n    }\n  }, []);\n\n  return { movies, error, status };\n}\n"],"names":["Message","styled","Error","message","Item","LinkTo","Link","MoviesItem","id","title","to","List","movies","map","poster_path","poster","HomePage","useState","setMovies","status","setStatus","error","setError","useEffect","Api","then","data","results","lenght","catch","useFetchTrandingMovies","Loader","MoviesList"],"sourceRoot":""}