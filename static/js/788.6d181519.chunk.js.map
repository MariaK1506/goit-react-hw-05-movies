{"version":3,"file":"static/js/788.6d181519.chunk.js","mappings":"sLAEaA,E,QAAUC,GAAAA,GAAH,sF,SCKpB,EAJc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAO,SAACF,EAAD,UAAUE,M,kICDNC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,SAAC,IAAD,UAAmBA,K,6BCwC5B,EAxCqB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAIhBC,EAAaD,EAAaE,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,MACrE,OACE,UAACR,EAAD,YACE,0BACE,gBACES,IAAG,yCAAoCP,EAAaQ,aACpDC,IAAKT,EAAaU,WAGtB,4BACE,wBAAKV,EAAaU,MAAQV,EAAaU,MAAQ,WAC/C,wCAAgBV,EAAaW,aAA7B,QACA,sCACaX,EAAaY,SAAWZ,EAAaY,SAAW,eAE7D,oCAAYX,GAA0B,uBAExC,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMY,GAAG,OAAT,qBAGF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,a,mBClCGC,GAAapB,E,QAAAA,IAAOqB,EAAAA,GAAPrB,CAAH,iPCSvB,EATiB,SAAC,GAAsB,IAApBiB,EAAmB,EAAnBA,GAAId,EAAe,EAAfA,SACtB,OACE,UAACiB,EAAD,CAAYH,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaK,KAAK,OACjBnB,MCqDP,EAnDyB,WAAO,IAAD,IACrBoB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UA0B7C,OAxBAC,EAAAA,EAAAA,YAAU,WACRL,EAAU,WAIRM,EAAAA,kBAAsBd,GACnBe,MAAK,SAAAC,GACJZ,EAASY,GACTR,EAAU,YAEU,IAAhBQ,EAAKC,SACPb,EAAS,IACTE,EAAS,gDACTE,EAAU,gBAGbU,OAAM,SAAAb,GAELC,EAASD,GACTG,EAAU,iBAGf,CAACR,KAGF,gCACc,YAAXO,IAAwB,SAACY,EAAA,EAAD,IACb,aAAXZ,IAAyB,SAACa,EAAA,EAAD,CAAO1C,QAAS2B,IAC9B,aAAXE,IACC,8BACE,UAAC5B,EAAD,YACE,SAAC,EAAD,CAAUe,GAAIe,EAAd,6BAGA,SAAC,EAAD,CAAc5B,aAAcsB","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/Container/Container.jsx","components/MovieDetails/MovieDetails.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Message = styled.h2`\n  text-align: center;\n  color: #3f51b5;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Error.styled';\n\nconst Error = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nexport default Error;\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { WrapperContainer } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <WrapperContainer>{children}</WrapperContainer>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Container } from 'components/Container/Container';\n\nconst MovieDetails = ({ movieDetails }) => {\n  // const { poster_path, title, genres, overview, releaseDate, vote_average } =\n  //   movieDetails;\n\n  const genresList = movieDetails.genres.map(genre => genre.name).join(', ');\n  return (\n    <Container>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n        />\n      </div>\n      <div>\n        <h2>{movieDetails.title ? movieDetails.title : 'Movie'}</h2>\n        <p>User Score: {movieDetails.vote_average}%</p>\n        <p>\n          Overview: {movieDetails.overview ? movieDetails.overview : 'About...'}\n        </p>\n        <p>Genres: {genresList ? genresList : 'No informaton'}</p>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from 'components/BackLink/BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport * as Api from 'services/movies-api';\nimport { Container } from 'components/Container/Container';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport BackLink from 'components/BackLink/BackLink';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    setStatus('pending');\n    renderMovieDetails();\n\n    function renderMovieDetails() {\n      Api.fetchMovieDetails(movieId)\n        .then(data => {\n          setMovie(data);\n          setStatus('resolved');\n\n          if (data.length === 0) {\n            setMovie([]);\n            setError('Sorry, there are no information about movie.');\n            setStatus('rejected');\n          }\n        })\n        .catch(error => {\n          //   console.log(error);\n          setError(error);\n          setStatus('rejected');\n        });\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <Error message={error} />}\n      {status === 'resolved' && (\n        <section>\n          <Container>\n            <BackLink to={backLinkHref}>Back to movies</BackLink>\n\n            {/* {error && <Navigate to=\"/\" replace />} */}\n            <MovieDetails movieDetails={movie} />\n          </Container>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["Message","styled","message","Container","children","movieDetails","genresList","genres","map","genre","name","join","src","poster_path","alt","title","vote_average","overview","to","Suspense","fallback","StyledLink","Link","size","movieId","useParams","useState","movie","setMovie","error","setError","status","setStatus","backLinkHref","useLocation","state","from","useEffect","Api","then","data","length","catch","Loader","Error"],"sourceRoot":""}